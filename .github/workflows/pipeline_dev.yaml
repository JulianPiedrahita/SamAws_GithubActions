name: "Deploy-dev"
on:
  push:
    branches: ["main"]
jobs:


  build-create-s3-dev:
    runs-on: ubuntu-lastest
    steps:
      - name: Checking out code
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Create S3 bucket
        run:  |
          if aws s3api ${{ vars.BUCKET_NAME_DEV }} | grep -w ${{ vars.BUCKET_NAME_DEV }} >/dev/null; then
            echo "El bucket ${{ vars.BUCKET_NAME_DEV }} ya existe."
          else
            aws s3api create-bucket --bucket ${{ vars.BUCKET_NAME_DEV }} --region ${{ vars.AWS_REGION }}
              echo "El bucket ${{ vars.BUCKET_NAME_DEV }} ha sido creado."
            aws s3api put-public-access-block --bucket ${{ vars.BUCKET_NAME_DEV }} --public-access-block-configuration "BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true"    
              echo " se aplica la seguridad privada al ${{ vars.BUCKET_NAME_DEV }}"
            aws s3api put-bucket-logging --bucket ${{ vars.BUCKET_NAME_DEV }} --bucket-logging-status file://bucket-logging.json
              echo "El access server logging para ${{ vars.BUCKET_NAME_DEV }} ha sido configurado."
            aws s3api put-bucket-versioning --bucket ${{ vars.BUCKET_NAME_DEV }} --versioning-configuration Status=Enabled
              echo "El versionamiento para ${{ vars.BUCKET_NAME_DEV }} ha sido habilitado."
            #eliminacion de politica 
            aws s3api delete-bucket-policy --bucket ${{ vars.BUCKET_NAME_DEV }}
          fi
          
  build-deploy-dev:
    needs: [build-create-s3-dev]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: sam build --use-container
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
  
