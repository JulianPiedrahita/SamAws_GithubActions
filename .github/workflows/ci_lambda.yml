name: CI - lambda-sam

on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: write    

jobs:

  scan-trivy-repo:
    name: Run trivy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          trivy-config: trivy.yaml    

  depchecktest:
    name: Scan with OWASP Dependency Check 
    needs: [scan-trivy-repo] 
    runs-on: ubuntu-latest 

    permissions:
      actions: read
      contents: read
      security-events: write
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan with OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'SamAws_GithubActions' 
          path: '.' 
          format: 'SARIF' 
          out: '.' 
          args: >
                --enableRetired
        continue-on-error: true

      - name: Upload results from OWASP Dependency Check to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@main
        with:
          sarif_file: dependency-check-report.sarif
          category: "Scan-dependencies-code-with-OWASP-Dependency-Check"          

  test-pytest:
    name: Run pytests
    needs: [depchecktest]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upgrade dependencie pip
        run: python -m pip install --upgrade pip

      - name: Install dependence   
        run: pip install pytest pytest-md pytest-emoji pytest-cov   

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test with pytest
        run: pytest test/tests.py 

  test-sonar:
    name: Build sonar
    needs: [test-pytest]
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' 
          java-version: '17'
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7
      - name: SonarQube Scan
        run: sonar-scanner -X
           -Dsonar.host.url=${{ vars.SONAR_HOST_URL }}
           -Dsonar.token=${{ secrets.SONAR_TOKEN }}
           
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      
           SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      
            
  jmeter:
    name: Run jmeter
    needs: [test-sonar]
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run JMeter Action on a test
        uses: rbhadti94/apache-jmeter-action@v0.5.0
        with:
          testFilePath: tests/sample_test.jmx
          outputReportsFolder: reports/
          args: "--loglevel INFO"

      - name: Run JMeter Action on other tests
        uses: rbhadti94/apache-jmeter-action@v0.5.0
        with:
          testFilePath: other-tests/
          outputReportsFolder: other_reports/
          args: "--loglevel INFO"

      - uses: actions/upload-artifact@v1
        with:
          name: jmeter-test-results
          path: reports/

      - uses: actions/upload-artifact@v1
        with:
          name: jmeter-test-results-other
          path: other_reports/  

  call-workflow-cd-lambda:
    needs: [jmeter]
    uses: ./.github/workflows/cd_lambda.yml
