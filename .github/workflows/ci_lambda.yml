name: CI - lambda-sam

on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: write    

jobs:

  scan-trivy-repo:
      name: Run trivy
      runs-on: ubuntu-latest

      steps:

        - name: Checkout code
          uses: actions/checkout@v3

        - name: Run Trivy vulnerability scanner in fs mode
          uses: aquasecurity/trivy-action@master
          with:
            scan-type: 'fs'
            scan-ref: '.'
            trivy-config: trivy.yaml        

  test-pytest:
    name: Run pytests
    needs: [scan-trivy-repo]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upgrade dependencie pip
        run: python -m pip install --upgrade pip

      - name: Install dependence   
        run: pip install pytest pytest-md pytest-emoji pytest-cov   

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test with pytest
        run: pytest test/tests.py 

  build:
    name: Build
    needs: [test-pytest]
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      # Setup java 17 to be default (sonar-scanner requirement as of 5.x)
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      # Setup sonar-scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7
      # Run sonar-scanner -X
      - name: SonarQube Scan
        run: sonar-scanner -X
           -Dsonar.host.url=http://localhost:9000
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
           
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      

  sonarqube:
    name: Run sonarscanner
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    
      - name: Configure sonar scanner
        uses: philips-software/sonar-scanner-action@v1.5.1
        id: sonarconfig
        with:
          github_token: ${{ secrets.TOKEN_GITHUB }}
          token: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          projectName: test_sonar_python
          projectKey: SamAws_test
          url: http://127.0.0.1:9000
          BaseDir: app/src
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.tests=tests/
            -Dsonar.verbose=true 
          isCommunityEdition: true
          enablePullRequestDecoration: true
          onlyConfig: true
            
  jmeter:
    name: Run jmeter
    needs: [sonarqube]
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run JMeter Action on a test
        uses: rbhadti94/apache-jmeter-action@v0.5.0
        with:
          testFilePath: tests/sample_test.jmx
          outputReportsFolder: reports/
          args: "--loglevel INFO"

      - name: Run JMeter Action on other tests
        uses: rbhadti94/apache-jmeter-action@v0.5.0
        with:
          testFilePath: other-tests/
          outputReportsFolder: other_reports/
          args: "--loglevel INFO"

      - uses: actions/upload-artifact@v1
        with:
          name: jmeter-test-results
          path: reports/

      - uses: actions/upload-artifact@v1
        with:
          name: jmeter-test-results-other
          path: other_reports/  

  call-workflow-cd-lambda:
    needs: [jmeter]
    uses: ./.github/workflows/cd_lambda.yml
